[package]
name = "gitlabjobber"
version = "1.2.0"
edition = "2021"
authors = ["Dyego <dyegomb@gmail.com"]
license = "MIT OR Apache-2.0"
description = "Starts manual jobs with gitlab api"
repository = "https://gitlab.com/dyegomb/gitlabjob"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[workspace.dependencies]
async-trait = "0.1"
env_logger = "0.10"
envy = "0.4"
futures = "0.3"
lettre = { version = "0.10", features = ["rustls-tls"] }
log = { version = "0.4", features = ["max_level_debug", "release_max_level_info"] }
merge = "0.1"
reqwest = { version = "0.11", default-features = false, features = ["json", "rustls-tls"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
tokio = { version = "1", default-features = false, features = ["time", "macros", "rt"] }
toml = "0.7"

[dependencies]
configloader = { path = "./configloader"}
mailsender = { path = "./mailsender" }
gitlabapi = { path = "./gitlabapi" }
tokio = { workspace = true }
futures = { workspace = true }
log = { workspace = true }
env_logger = { workspace = true }

[dev-dependencies]
env_logger = "0.10"
serde_json = "1.0"

[target.'cfg(all(target_env = "musl"))'.dependencies]
openssl = { version = "0.10", features = ["vendored"] }

[target.'cfg(all(target_env = "musl", target_pointer_width = "64"))'.dependencies.jemallocator]
version = "0.5"

[workspace]
members = [
    "gitlabapi",
    "configloader",
    "mailsender"
]

[profile.dev]
opt-level = 0

[lints.rust]
unsafe_code = "forbid"

[lints.clippy]
cargo        = { priority = -1, level = "deny" }
complexity   = { priority = -1, level = "deny" }
correctness  = { priority = -1, level = "deny" }
nursery      = { priority = -1, level = "deny" }
pedantic     = { priority = -1, level = "deny" }
perf         = { priority = -1, level = "deny" }
restriction  = { priority = -1, level = "deny" }
style        = { priority = -1, level = "deny" }
suspicious   = { priority = -1, level = "deny" }

# allow the following
absolute_paths                      = "allow"   
arbitrary_source_item_ordering      = "allow"   
blanket_clippy_restriction_lints    = "allow"   # clippy in extreme mode so yes, we want this ;)
cargo-ignore-publish                = "allow"   
implicit_return                     = "allow"   # use implicit return
iter_over_hash_type                 = "allow"   
missing_docs_in_private_items       = "allow"   
multiple_crate_versions             = "allow"   # cannot control our dependencies
question_mark_used                  = "allow"   # use the question mark operator
shadow_reuse                        = "allow"   # Allow variable shadowings
single_call_fn                      = "allow"   
std_instead_of_alloc                = "allow"   

[profile.release]
codegen-units = 1
# opt-level = 3
opt-level = "z"
lto = "fat"
strip = "symbols"
# strip = true
panic = "abort"
debug = false
debug-assertions = false
overflow-checks = false
